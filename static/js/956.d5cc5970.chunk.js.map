{"version":3,"file":"static/js/956.d5cc5970.chunk.js","mappings":"yPAEAA,EAAeA,CAACC,EAAgBC,KAC5B,MAAMC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAkBD,EAAAA,EAAAA,QAAOH,GAC/BI,EAAgBC,QAAUL,EAC1B,MAAMM,GAAoBC,EAAAA,EAAAA,cAAaC,IAC/BN,EAASG,UAAYH,EAASG,QAAQI,SAASD,EAAEE,SACjDN,EAAgBC,SAAWD,EAAgBC,QAAQG,EACvD,GACD,IASH,OAPAG,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAWX,GAAOY,SAASC,KAEjC,OADAF,EAASG,iBAAiB,QAAST,GAC5B,KACHM,EAASI,oBAAoB,QAASV,EAAkB,CAC3D,GACF,CAACL,EAAKK,IACFJ,CAAQ,ECjBnB,MCFsE,GAAgBe,gBDEjE,CACjBC,KAAM,oBACNC,QAAS,4HACTC,YAAa,oFACbC,YAAa,yBACbC,IAAK,6pBA0BLC,QAAS,CACLC,QAAQ,EACRC,UAAW,0BACXC,MAAO,uMASPC,KAAM,CAAC,CACXC,MAAO,2BACPR,YAAa,qEACbS,KAAM,kbAeNC,MAAO,CAAC,CACRZ,KAAM,mBACNG,YAAa,yBACbU,UAAW,GACb,CACEb,KAAM,WACNG,YAAa,mBACbU,U,gBCrESC,EAAW,CAAC,KAAO,oBAAoB,QAAU,QAAQ,gBAAe,EAAK,aAAa,qBAAqB,QAAU,CAAC,CAAC,KAAO,oBAAoB,QAAU,wDAAwD,YAAc,oFAAmB,YAAc,2B","sources":["../../src/index.js","../../README.md","../node_modules/readme/modules.js"],"sourcesContent":["import {useEffect, useRef, useCallback} from 'react'\n\nexport default (onClickOutside, dom) => {\n    const outerRef = useRef(null);\n    const clickOutSideRef = useRef(onClickOutside);\n    clickOutSideRef.current = onClickOutside;\n    const outerClickHandler = useCallback((e) => {\n        if (outerRef.current && !outerRef.current.contains(e.target)) {\n            clickOutSideRef.current && clickOutSideRef.current(e);\n        }\n    }, []);\n\n    useEffect(() => {\n        const eventDom = dom || document.body;\n        eventDom.addEventListener('click', outerClickHandler);\n        return () => {\n            eventDom.removeEventListener('click', outerClickHandler);\n        }\n    }, [dom, outerClickHandler]);\n    return outerRef;\n};\n","import * as component_1 from '@kne/use-click-outside';\nimport * as component_2 from 'antd/lib/message';\nconst readmeConfig = {\n    name: `use-click-outside`,\n    summary: `<p>实现了一个点击容器之外触发回调函数的hooks.</p>`,\n    description: `用于捕获dom以外的元素点击事件`,\n    packageName: `@kne/use-click-outside`,\n    api: `<p>const ref = useClickOutside(callback, dom);</p>\n<p>注意：返回的ref必须传给一个dom的ref</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>callback</td>\n<td>模拟的失去焦点事件触发后执行的回调</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dom</td>\n<td>可以触发点击的外部区域，默认为body</td>\n<td>dom</td>\n<td>document.body</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `use_click_outside_4ca77`,\n        style: `.use_click_outside_4ca77 .container {\n  width: 200px;\n  height: 200px;\n  border: solid 1px #ccc;\n  border-radius: 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n`,\n        list: [{\n    title: `基本示例`,\n    description: `点击容器外部就弹窗提示`,\n    code: `const {default: useClickOutside} = _useClickOutside;\nconst {default: message} = _message;\n\nconst BaseExample = () => {\n    const ref = useClickOutside(() => {\n        message.success('点击了容器外部');\n    });\n    return <div ref={ref} className=\"container\">\n        这是组件内部，点击外部试试\n    </div>;\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_useClickOutside\",\n    packageName: \"@kne/use-click-outside\",\n    component: component_1\n},{\n    name: \"_message\",\n    packageName: \"antd/lib/message\",\n    component: component_2\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import UseClickOutside from '@components/use-click-outside/README.md';export default {UseClickOutside};\nexport const manifest = {\"name\":\"use-click-outside\",\"version\":\"0.2.1\",\"open-version\":true,\"public-url\":\"/use-click-outside\",\"modules\":[{\"name\":\"use-click-outside\",\"baseDir\":\"/home/runner/work/use-click-outside/use-click-outside\",\"description\":\"用于捕获dom以外的元素点击事件\",\"packageName\":\"@kne/use-click-outside\"}]};"],"names":["index","onClickOutside","dom","outerRef","useRef","clickOutSideRef","current","outerClickHandler","useCallback","e","contains","target","useEffect","eventDom","document","body","addEventListener","removeEventListener","UseClickOutside","name","summary","description","packageName","api","example","isFull","className","style","list","title","code","scope","component","manifest"],"sourceRoot":""}